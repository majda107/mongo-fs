@inject MongoService _ms;
@inject StateService _ss;

<div class="drive-detail">
    @if (this.Drive == null)
    {
        <span>No drive selected...</span>
    }
    else
    {
        <div class="data-grid">
            <span>Drive:</span>
            <span>
                <b>@Drive.Name</b>
            </span>

            <span>Capacity:</span>
            <span>
                <b>@(Drive.Capacity.ToString())</b>
            </span>

            <span>Space:</span>
            <span>
                <b>@((Drive.Capacity - Drive.Taken).ToString())</b>
            </span>


            <span>Created:</span>
            <span>
                <b>2/12/2020 4:20PM</b>
            </span>
        </div>

        <button class="danger" @onclick="async () => { await this._ms.DeleteDrive(this.Drive.Id); await this.Deleted.InvokeAsync(); this.StateHasChanged(); }">Delete</button>
    }


</div>

@code {

    [Parameter]
    public DriveModel Drive { get; set; }


    [Parameter]
    public EventCallback Deleted { get; set; }


    protected override async Task OnInitializedAsync()
    {
        this._ss.Deleted += async (o, e) =>
        {
            this.Drive.Taken -= e;
            await this.InvokeAsync(this.StateHasChanged);
        };
    }

}