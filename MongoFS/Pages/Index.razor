@page "/"
@inject MongoService _ms;

<div class="mongofs-layout">
    <section class="mongofs-header">
        <h1>MongoFS</h1>
        <span class="subheader">FileSystem to save ‘em all.</span>
    </section>

    <section class="statistics">
        <div class="statistics-header">
            <h2>Statistics</h2>
            <ul>
                <li>Files: 42</li>
                <li>Folders: 14</li>
                <li>Drives: 4</li>
            </ul>
        </div>
        <ul>
            <li>Running on <b>ASP.NET 5</b></li>
            <li>Stored in <b>MongoDB</b></li>
        </ul>
        <span>Crafted with ❤️ by️ <b>Marián Trpkoš</b></span>
    </section>

    <section class="mongofs-drive">
        <DriveDetail Drive="@this.drive"/>
    </section>

    <section class="drives">
        <DrivesDetail Selected="@Selected" Active="@this.drive"></DrivesDetail>
    </section>

    <section class="detail">
        <IFileDetail IFile="@this.selected"/>
    </section>

    <section class="files">
        <IFilesDetail Drive="@this.drive" Parent="@this.parent" ParentSelected="@ParentSelected" IFileSelected="@IFileSelected"/>
    </section>
</div>

@code {
    //TODO implement route id's
    // [Parameter]
    // public string Id { get; set; }
    //
    // [Parameter]
    // public string FolderId { get; set; }

    private DriveModel drive = null;
    private FolderModel parent = null;
    private IFileModel selected = null;

    private void Selected(DriveModel drive)
    {
        this.drive = drive;
        Console.WriteLine($"Drive {drive.Name} selected!");
        this.StateHasChanged();
    }

    private void ParentSelected(FolderModel parent)
    {
        this.parent = parent;
        this.selected = parent;
        this.StateHasChanged();
    }

    private void IFileSelected(IFileModel ifile)
    {
        this.selected = ifile;
        this.StateHasChanged();
    }

}